{
  "openapi": "3.0.0",
  "info": {
    "description": "Topological Inventory",
    "version": "0.0.1",
    "title": "Topological Inventory",
    "contact": {
      "email": "support@redhat.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "security": [
    {
      "UserSecurity": [

      ]
    }
  ],
  "paths": {
    "/container_groups": {
      "get": {
        "summary": "List ContainerGroups",
        "operationId": "listContainerGroups",
        "description": "Returns an array of ContainerGroup objects",
        "responses": {
          "200": {
            "description": "ContainerGroups array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerGroup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/container_groups/{id}": {
      "get": {
        "summary": "Show an existing ContainerGroup",
        "operationId": "showContainerGroup",
        "description": "Returns a ContainerGroup object",
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ],
        "responses": {
          "200": {
            "description": "ContainerGroup info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerGroup"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/container_groups/{id}/containers": {
      "get": {
        "summary": "List Containers for ContainerGroup",
        "operationId": "listContainerGroupContainers",
        "description": "Returns an array of Container objects",
        "responses": {
          "200": {
            "description": "Containers array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Container"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ]
      }
    },
    "/container_images": {
      "get": {
        "summary": "List ContainerImages",
        "operationId": "listContainerImages",
        "description": "Returns an array of ContainerImage objects",
        "responses": {
          "200": {
            "description": "ContainerImages array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerImage"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/container_images/{id}": {
      "get": {
        "summary": "Show an existing ContainerImage",
        "operationId": "showContainerImage",
        "description": "Returns a ContainerImage object",
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ],
        "responses": {
          "200": {
            "description": "ContainerImage info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerImage"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/container_nodes": {
      "get": {
        "summary": "List ContainerNodes",
        "operationId": "listContainerNodes",
        "description": "Returns an array of ContainerNode objects",
        "responses": {
          "200": {
            "description": "ContainerNodes array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerNode"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/container_nodes/{id}": {
      "get": {
        "summary": "Show an existing ContainerNode",
        "operationId": "showContainerNode",
        "description": "Returns a ContainerNode object",
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ],
        "responses": {
          "200": {
            "description": "ContainerNode info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerNode"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/container_nodes/{id}/container_groups": {
      "get": {
        "summary": "List ContainerGroups for ContainerNode",
        "operationId": "listContainerNodeContainerGroups",
        "description": "Returns an array of ContainerGroup objects",
        "responses": {
          "200": {
            "description": "ContainerGroups array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerGroup"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ]
      }
    },
    "/container_projects": {
      "get": {
        "summary": "List ContainerProjects",
        "operationId": "listContainerProjects",
        "description": "Returns an array of ContainerProject objects",
        "responses": {
          "200": {
            "description": "ContainerProjects array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerProject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/container_projects/{id}": {
      "get": {
        "summary": "Show an existing ContainerProject",
        "operationId": "showContainerProject",
        "description": "Returns a ContainerProject object",
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ],
        "responses": {
          "200": {
            "description": "ContainerProject info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerProject"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/container_projects/{id}/container_groups": {
      "get": {
        "summary": "List ContainerGroups for ContainerProject",
        "operationId": "listContainerProjectContainerGroups",
        "description": "Returns an array of ContainerGroup objects",
        "responses": {
          "200": {
            "description": "ContainerGroups array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerGroup"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ]
      }
    },
    "/container_projects/{id}/container_templates": {
      "get": {
        "summary": "List ContainerTemplates for ContainerProject",
        "operationId": "listContainerProjectContainerTemplates",
        "description": "Returns an array of ContainerTemplate objects",
        "responses": {
          "200": {
            "description": "ContainerTemplates array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerTemplate"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ]
      }
    },
    "/container_templates": {
      "get": {
        "summary": "List ContainerTemplates",
        "operationId": "listContainerTemplates",
        "description": "Returns an array of ContainerTemplate objects",
        "responses": {
          "200": {
            "description": "ContainerTemplates array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerTemplate"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/container_templates/{id}": {
      "get": {
        "summary": "Show an existing ContainerTemplate",
        "operationId": "showContainerTemplate",
        "description": "Returns a ContainerTemplate object",
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ],
        "responses": {
          "200": {
            "description": "ContainerTemplate info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerTemplate"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/containers": {
      "get": {
        "summary": "List Containers",
        "operationId": "listContainers",
        "description": "Returns an array of Container objects",
        "responses": {
          "200": {
            "description": "Containers array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Container"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/containers/{id}": {
      "get": {
        "summary": "Show an existing Container",
        "operationId": "showContainer",
        "description": "Returns a Container object",
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Container info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Container"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/flavors": {
      "get": {
        "summary": "List Flavors",
        "operationId": "listFlavors",
        "description": "Returns an array of Flavor objects",
        "responses": {
          "200": {
            "description": "Flavors array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Flavor"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/flavors/{id}": {
      "get": {
        "summary": "Show an existing Flavor",
        "operationId": "showFlavor",
        "description": "Returns a Flavor object",
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Flavor info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Flavor"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/orchestration_stacks": {
      "get": {
        "summary": "List OrchestrationStacks",
        "operationId": "listOrchestrationStacks",
        "description": "Returns an array of OrchestrationStack objects",
        "responses": {
          "200": {
            "description": "OrchestrationStacks array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrchestrationStack"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orchestration_stacks/{id}": {
      "get": {
        "summary": "Show an existing OrchestrationStack",
        "operationId": "showOrchestrationStack",
        "description": "Returns a OrchestrationStack object",
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OrchestrationStack info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrchestrationStack"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/service_instances": {
      "get": {
        "summary": "List ServiceInstances",
        "operationId": "listServiceInstances",
        "description": "Returns an array of ServiceInstance objects",
        "responses": {
          "200": {
            "description": "ServiceInstances array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceInstance"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/service_instances/{id}": {
      "get": {
        "summary": "Show an existing ServiceInstance",
        "operationId": "showServiceInstance",
        "description": "Returns a ServiceInstance object",
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ],
        "responses": {
          "200": {
            "description": "ServiceInstance info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceInstance"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/service_offerings": {
      "get": {
        "summary": "List ServiceOfferings",
        "operationId": "listServiceOfferings",
        "description": "Returns an array of ServiceOffering objects",
        "responses": {
          "200": {
            "description": "ServiceOfferings array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceOffering"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/service_offerings/{id}": {
      "get": {
        "summary": "Show an existing ServiceOffering",
        "operationId": "showServiceOffering",
        "description": "Returns a ServiceOffering object",
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ],
        "responses": {
          "200": {
            "description": "ServiceOffering info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOffering"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/service_offerings/{id}/service_instances": {
      "get": {
        "summary": "List ServiceInstances for ServiceOffering",
        "operationId": "listServiceOfferingServiceInstances",
        "description": "Returns an array of ServiceInstance objects",
        "responses": {
          "200": {
            "description": "ServiceInstances array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceInstance"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ]
      }
    },
    "/service_offerings/{id}/service_plans": {
      "get": {
        "summary": "List ServicePlans for ServiceOffering",
        "operationId": "listServiceOfferingServicePlans",
        "description": "Returns an array of ServicePlan objects",
        "responses": {
          "200": {
            "description": "ServicePlans array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServicePlan"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ]
      }
    },
    "/service_offering_icons": {
      "get": {
        "summary": "List ServiceOfferingIcons",
        "operationId": "listServiceOfferingIcons",
        "description": "Returns an array of ServiceOfferingIcon objects",
        "responses": {
          "200": {
            "description": "ServiceOfferingIcons array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceOfferingIcon"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/service_offering_icons/{id}": {
      "get": {
        "summary": "Show an existing ServiceOfferingIcon",
        "operationId": "showServiceOfferingIcon",
        "description": "Returns a ServiceOfferingIcon object",
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ],
        "responses": {
          "200": {
            "description": "ServiceOfferingIcon info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOfferingIcon"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/service_plans": {
      "get": {
        "summary": "List ServicePlans",
        "operationId": "listServicePlans",
        "description": "Returns an array of ServicePlan objects",
        "responses": {
          "200": {
            "description": "ServicePlans array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServicePlan"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/service_plans/{id}": {
      "get": {
        "summary": "Show an existing ServicePlan",
        "operationId": "showServicePlan",
        "description": "Returns a ServicePlan object",
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ],
        "responses": {
          "200": {
            "description": "ServicePlan info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicePlan"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/service_plans/{id}/order": {
      "post": {
        "summary": "Order an existing ServicePlan",
        "operationId": "orderServicePlan",
        "description": "Returns a Task id",
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderParameters"
              }
            }
          },
          "description": "Order parameters defining the service and provider control",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns a task ID for the order",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "task_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          }
        }
      }
    },
    "/service_plans/{id}/service_instances": {
      "get": {
        "summary": "List ServiceInstances for ServicePlan",
        "operationId": "listServicePlanServiceInstances",
        "description": "Returns an array of ServiceInstance objects",
        "responses": {
          "200": {
            "description": "ServiceInstances array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceInstance"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ]
      }
    },
    "/sources": {
      "get": {
        "summary": "List Sources",
        "operationId": "listSources",
        "description": "Returns an array of Source objects",
        "responses": {
          "200": {
            "description": "Sources array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Source"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sources/{id}": {
      "get": {
        "summary": "Show an existing Source",
        "operationId": "showSource",
        "description": "Returns a Source object",
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Source info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Source"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/sources/{id}/container_groups": {
      "get": {
        "summary": "List ContainerGroups for Source",
        "operationId": "listSourceContainerGroups",
        "description": "Returns an array of ContainerGroup objects",
        "responses": {
          "200": {
            "description": "ContainerGroups array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerGroup"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ]
      }
    },
    "/sources/{id}/container_images": {
      "get": {
        "summary": "List ContainerImages for Source",
        "operationId": "listSourceContainerImages",
        "description": "Returns an array of ContainerImage objects",
        "responses": {
          "200": {
            "description": "ContainerImages array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerImage"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ]
      }
    },
    "/sources/{id}/container_nodes": {
      "get": {
        "summary": "List ContainerNodes for Source",
        "operationId": "listSourceContainerNodes",
        "description": "Returns an array of ContainerNode objects",
        "responses": {
          "200": {
            "description": "ContainerNodes array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerNode"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ]
      }
    },
    "/sources/{id}/container_projects": {
      "get": {
        "summary": "List ContainerProjects for Source",
        "operationId": "listSourceContainerProjects",
        "description": "Returns an array of ContainerProject objects",
        "responses": {
          "200": {
            "description": "ContainerProjects array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerProject"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ]
      }
    },
    "/sources/{id}/container_templates": {
      "get": {
        "summary": "List ContainerTemplates for Source",
        "operationId": "listSourceContainerTemplates",
        "description": "Returns an array of ContainerTemplate objects",
        "responses": {
          "200": {
            "description": "ContainerTemplates array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerTemplate"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ]
      }
    },
    "/sources/{id}/containers": {
      "get": {
        "summary": "List Containers for Source",
        "operationId": "listSourceContainers",
        "description": "Returns an array of Container objects",
        "responses": {
          "200": {
            "description": "Containers array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Container"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ]
      }
    },
    "/sources/{id}/orchestration_stacks": {
      "get": {
        "summary": "List OrchestrationStacks for Source",
        "operationId": "listSourceOrchestrationStacks",
        "description": "Returns an array of OrchestrationStack objects",
        "responses": {
          "200": {
            "description": "OrchestrationStacks array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrchestrationStack"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ]
      }
    },
    "/sources/{id}/service_instances": {
      "get": {
        "summary": "List ServiceInstances for Source",
        "operationId": "listSourceServiceInstances",
        "description": "Returns an array of ServiceInstance objects",
        "responses": {
          "200": {
            "description": "ServiceInstances array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceInstance"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ]
      }
    },
    "/sources/{id}/service_offerings": {
      "get": {
        "summary": "List ServiceOfferings for Source",
        "operationId": "listSourceServiceOfferings",
        "description": "Returns an array of ServiceOffering objects",
        "responses": {
          "200": {
            "description": "ServiceOfferings array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceOffering"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ]
      }
    },
    "/sources/{id}/service_plans": {
      "get": {
        "summary": "List ServicePlans for Source",
        "operationId": "listSourceServicePlans",
        "description": "Returns an array of ServicePlan objects",
        "responses": {
          "200": {
            "description": "ServicePlans array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServicePlan"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ]
      }
    },
    "/sources/{id}/vms": {
      "get": {
        "summary": "List Vms for Source",
        "operationId": "listSourceVms",
        "description": "Returns an array of Vm objects",
        "responses": {
          "200": {
            "description": "Vms array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Vm"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ]
      }
    },
    "/sources/{id}/volume_types": {
      "get": {
        "summary": "List VolumeTypes for Source",
        "operationId": "listSourceVolumeTypes",
        "description": "Returns an array of VolumeType objects",
        "responses": {
          "200": {
            "description": "VolumeTypes array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VolumeType"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ]
      }
    },
    "/sources/{id}/volumes": {
      "get": {
        "summary": "List Volumes for Source",
        "operationId": "listSourceVolumes",
        "description": "Returns an array of Volume objects",
        "responses": {
          "200": {
            "description": "Volumes array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Volume"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ]
      }
    },
    "/tags": {
      "get": {
        "summary": "List Tags",
        "operationId": "listTags",
        "description": "Returns an array of Tag objects",
        "responses": {
          "200": {
            "description": "Tags array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tags/{id}": {
      "get": {
        "summary": "Show an existing Tag",
        "operationId": "showTag",
        "description": "Returns a Tag object",
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Tag info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "summary": "List Tasks",
        "operationId": "listTasks",
        "description": "Returns an array of Task objects",
        "responses": {
          "200": {
            "description": "Tasks array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "summary": "Show an existing Task",
        "operationId": "showTask",
        "description": "Returns a Task object",
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Task info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/vms": {
      "get": {
        "summary": "List Vms",
        "operationId": "listVms",
        "description": "Returns an array of Vm objects",
        "responses": {
          "200": {
            "description": "Vms array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Vm"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vms/{id}": {
      "get": {
        "summary": "Show an existing Vm",
        "operationId": "showVm",
        "description": "Returns a Vm object",
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Vm info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vm"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/vms/{id}/volume_attachments": {
      "get": {
        "summary": "List VolumeAttachments for Vm",
        "operationId": "listVmVolumeAttachments",
        "description": "Returns an array of VolumeAttachment objects",
        "responses": {
          "200": {
            "description": "VolumeAttachments array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VolumeAttachment"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ]
      }
    },
    "/vms/{id}/volumes": {
      "get": {
        "summary": "List Volumes for Vm",
        "operationId": "listVmVolumes",
        "description": "Returns an array of Volume objects",
        "responses": {
          "200": {
            "description": "Volumes array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Volume"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ]
      }
    },
    "/volume_attachments": {
      "get": {
        "summary": "List VolumeAttachments",
        "operationId": "listVolumeAttachments",
        "description": "Returns an array of VolumeAttachment objects",
        "responses": {
          "200": {
            "description": "VolumeAttachments array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VolumeAttachment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/volume_attachments/{id}": {
      "get": {
        "summary": "Show an existing VolumeAttachment",
        "operationId": "showVolumeAttachment",
        "description": "Returns a VolumeAttachment object",
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ],
        "responses": {
          "200": {
            "description": "VolumeAttachment info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VolumeAttachment"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/volume_types": {
      "get": {
        "summary": "List VolumeTypes",
        "operationId": "listVolumeTypes",
        "description": "Returns an array of VolumeType objects",
        "responses": {
          "200": {
            "description": "VolumeTypes array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VolumeType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/volume_types/{id}": {
      "get": {
        "summary": "Show an existing VolumeType",
        "operationId": "showVolumeType",
        "description": "Returns a VolumeType object",
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ],
        "responses": {
          "200": {
            "description": "VolumeType info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VolumeType"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/volumes": {
      "get": {
        "summary": "List Volumes",
        "operationId": "listVolumes",
        "description": "Returns an array of Volume objects",
        "responses": {
          "200": {
            "description": "Volumes array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Volume"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/volumes/{id}": {
      "get": {
        "summary": "Show an existing Volume",
        "operationId": "showVolume",
        "description": "Returns a Volume object",
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Volume info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volume"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://cloud.redhat.com/{basePath}",
      "description": "Production Server",
      "variables": {
        "basePath": {
          "default": "/api/topological-inventory/v0.0"
        }
      }
    },
    {
      "url": "http://localhost:{port}/{basePath}",
      "description": "Development Server",
      "variables": {
        "port": {
          "default": "3000"
        },
        "basePath": {
          "default": "/api/topological-inventory/v0.0"
        }
      }
    }
  ],
  "components": {
    "parameters": {
      "ID": {
        "name": "id",
        "in": "path",
        "description": "ID of the resource",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "/^\\d+$/"
        }
      }
    },
    "securitySchemes": {
      "UserSecurity": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "schemas": {
      "Container": {
        "type": "object",
        "properties": {
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ID"
              },
              {
                "readOnly": true
              }
            ]
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "example": "docker-build"
          },
          "cpu_limit": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "cpu_request": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "memory_limit": {
            "type": "integer",
            "readOnly": true
          },
          "memory_request": {
            "type": "integer",
            "readOnly": true
          },
          "container_group_id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ID"
              },
              {
                "readOnly": true
              }
            ]
          },
          "container_image_id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ID"
              },
              {
                "readOnly": true
              }
            ]
          },
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "ContainerGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "example": "Sample Group",
            "title": "Name",
            "readOnly": true
          },
          "ipaddress": {
            "type": "string",
            "example": "192.0.2.1",
            "title": "IP Address",
            "readOnly": true
          },
          "source_created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "source_deleted_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "container_node_id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "container_project_id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "source_id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "source_ref": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "taggings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tagging"
            },
            "readOnly": true
          },
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "ContainerImage": {
        "type": "object",
        "properties": {
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ID"
              },
              {
                "readOnly": true
              }
            ]
          },
          "source_id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ID"
              },
              {
                "readOnly": true
              }
            ]
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "example": "openshift3/postgresql-92-rhel7"
          },
          "tag": {
            "type": "string",
            "readOnly": true,
            "example": "latest"
          },
          "source_created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "source_deleted_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "taggings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tagging"
            },
            "readOnly": true
          },
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "ContainerNode": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "example": "Sample Group",
            "title": "Name",
            "readOnly": true
          },
          "cpus": {
            "type": "integer",
            "example": 4,
            "readOnly": true
          },
          "lives_on_type": {
            "type": "string",
            "readOnly": true,
            "example": "Vm"
          },
          "lives_on_id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ID"
              },
              {
                "readOnly": true
              }
            ]
          },
          "memory": {
            "type": "integer",
            "example": 4294967296,
            "readOnly": true
          },
          "source_created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "source_deleted_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "source_id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "source_ref": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "taggings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tagging"
            },
            "readOnly": true
          },
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "ContainerProject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "example": "Sample Project",
            "title": "Name"
          },
          "display_name": {
            "type": "string",
            "example": "This is a sample display name for a project",
            "title": "Display Name"
          },
          "source_id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "source_ref": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "taggings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tagging"
            },
            "readOnly": true
          },
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "ContainerTemplate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "example": "Sample Project",
            "title": "Name"
          },
          "source_created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "source_deleted_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "source_id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "source_ref": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "container_project_id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "taggings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tagging"
            },
            "readOnly": true
          },
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "Flavor": {
        "type": "object",
        "properties": {
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ID"
              },
              {
                "readOnly": true
              }
            ]
          },
          "source_id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ID"
              },
              {
                "readOnly": true
              }
            ]
          },
          "source_ref": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "disk_size": {
            "type": "integer",
            "readOnly": true,
            "example": 17179869184,
            "description": "Size of the default disks in bytes"
          },
          "disk_count": {
            "type": "integer",
            "readOnly": true,
            "example": 2,
            "description": "The number of default disks"
          },
          "memory": {
            "type": "integer",
            "readOnly": true,
            "example": 17179869184,
            "description": "Amount of RAM in bytes"
          },
          "cpus": {
            "type": "integer",
            "readOnly": true,
            "example": 2,
            "description": "Number of CPUs"
          },
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "ID": {
        "type": "string",
        "description": "ID of the resource",
        "pattern": "/^\\d+$/"
      },
      "OrchestrationStack": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "example": "Sample OrchestrationStack",
            "title": "Name",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Description of the OrchestrationStack",
            "readOnly": true
          },
          "source_created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "source_deleted_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "source_id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "source_ref": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "OrderParameters": {
        "type": "object",
        "properties": {
          "service_parameters": {
            "type": "object",
            "description": "JSON object with provisioning parameters"
          },
          "provider_control_parameters": {
            "type": "object",
            "description": "The provider specific parameters needed to provision this service. This might include namespaces, special keys"
          }
        }
      },
      "ServiceInstance": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "example": "Sample ServiceInstance",
            "title": "Name"
          },
          "extra": {
            "type": "string",
            "description": "Extra information about this object in JSON format",
            "readOnly": true
          },
          "source_created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "source_deleted_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "service_offering_id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "source_id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "source_ref": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "ServiceOffering": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "example": "Sample Service Offering",
            "title": "Name",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "example": "This is a short description",
            "title": "Description",
            "readOnly": true
          },
          "display_name": {
            "type": "string",
            "example": "MariaDB (Ephemeral)",
            "title": "Display Name",
            "readOnly": true
          },
          "distributor": {
            "type": "string",
            "example": "Red Hat, Inc.",
            "title": "Distributor",
            "readOnly": true
          },
          "documentation_url": {
            "type": "string",
            "example": "https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md",
            "title": "Documentation URL",
            "readOnly": true
          },
          "long_description": {
            "type": "string",
            "example": "This template provides a standalone MariaDB server with a database created...",
            "title": "Long Description",
            "readOnly": true
          },
          "support_url": {
            "type": "string",
            "example": "https://access.redhat.com",
            "title": "Support URL",
            "readOnly": true
          },
          "source_ref": {
            "type": "string",
            "example": "object-12345_67890",
            "title": "Source reference",
            "description": "The native reference used by the Source to refer to this object"
          },
          "extra": {
            "type": "string",
            "description": "Extra information about this object in JSON format",
            "readOnly": true
          },
          "source_created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "source_deleted_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "source_id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "service_offering_icon_id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "taggings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tagging"
            },
            "readOnly": true
          },
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "ServiceOfferingIcon": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "source_ref": {
            "type": "string",
            "example": "icon-mariadb"
          },
          "data": {
            "type": "string",
            "description": "Raw icon data",
            "title": "Icon Data"
          }
        }
      },
      "ServicePlan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "example": "Sample Provider",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "example": "This is a sample description for a provider",
            "title": "Description"
          },
          "extra": {
            "type": "string",
            "description": "Extra information about this object in JSON format",
            "readOnly": true
          },
          "source_created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "source_deleted_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "source_id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "source_ref": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "service_offering_id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "create_json_schema": {
            "type": "object",
            "readOnly": true
          },
          "update_json_schema": {
            "type": "object",
            "readOnly": true
          },
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "Source": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "source_type_id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "example": "Sample Provider",
            "title": "Name"
          },
          "uid": {
            "type": "string",
            "readOnly": true,
            "title": "Unique ID of the inventory source installation"
          },
          "version": {
            "type": "string",
            "readOnly": true,
            "example": "6.5.0",
            "title": "Version"
          }
        }
      },
      "SourceType": {
        "type": "object",
        "required": [
          "name",
          "product_name",
          "vendor"
        ],
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "example": "openshift"
          },
          "product_name": {
            "type": "string",
            "example": "OpenShift"
          },
          "vendor": {
            "type": "string",
            "example": "Red Hat"
          },
          "schema": {
            "type": "object"
          }
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "example": "architecture"
          },
          "namespace": {
            "type": "string",
            "readOnly": true,
            "example": "openshift"
          },
          "description": {
            "type": "string",
            "readOnly": true,
            "example": "Instruction set architecture"
          }
        }
      },
      "Tagging": {
        "type": "object",
        "properties": {
          "tag_id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "example": "architecture"
          },
          "value": {
            "type": "string",
            "readOnly": true,
            "example": "x86_64"
          }
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "example": "Order Service Plan",
            "title": "Name"
          },
          "status": {
            "type": "string",
            "example": "Error",
            "title": "Status"
          },
          "state": {
            "type": "string",
            "example": "Running",
            "title": "State"
          },
          "context": {
            "type": "object",
            "example": "Extra information about this task, e.g. new inventory items created by this task",
            "title": "Context"
          },
          "completed_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Tenant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "example": "Sample Tenant",
            "title": "Name",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Description of the Tenant",
            "readOnly": true
          },
          "external_tenant": {
            "type": "string",
            "description": "External tenant identifier",
            "readOnly": true
          }
        }
      },
      "Vm": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "example": "Sample Vm",
            "title": "Name",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Description of the Vm",
            "readOnly": true
          },
          "source_created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "source_deleted_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "source_id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "source_ref": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "uid_ems": {
            "type": "string",
            "readOnly": true,
            "description": "Cross-Source Unique Reference"
          },
          "hostname": {
            "type": "string",
            "readOnly": true,
            "example": "localhost.localdomain"
          },
          "power_state": {
            "type": "string",
            "readOnly": true,
            "example": "running"
          },
          "cpus": {
            "type": "integer",
            "readOnly": true,
            "example": 2,
            "description": "Total number of CPUs"
          },
          "memory": {
            "type": "integer",
            "readOnly": true,
            "example": 17179869184,
            "description": "Total RAM in bytes"
          },
          "orchestration_stack_id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "flavor_id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "taggings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tagging"
            },
            "readOnly": true
          },
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "Volume": {
        "type": "object",
        "properties": {
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ID"
              },
              {
                "readOnly": true
              }
            ]
          },
          "source_id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ID"
              },
              {
                "readOnly": true
              }
            ]
          },
          "source_region_id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "volume_type_id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ID"
              },
              {
                "readOnly": true
              }
            ]
          },
          "source_ref": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "example": "vol-00627bf31217a7bc0"
          },
          "state": {
            "type": "string",
            "example": "in-use"
          },
          "size": {
            "type": "integer",
            "example": 8589934592,
            "description": "Size of the volume in bytes"
          },
          "source_created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "source_deleted_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "VolumeAttachment": {
        "type": "object",
        "properties": {
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ID"
              },
              {
                "readOnly": true
              }
            ]
          },
          "vm_id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ID"
              },
              {
                "readOnly": true
              }
            ]
          },
          "volume_id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ID"
              },
              {
                "readOnly": true
              }
            ]
          },
          "device": {
            "type": "string",
            "readOnly": true,
            "example": "/dev/xvda"
          },
          "state": {
            "type": "string",
            "readOnly": true,
            "example": "attached"
          }
        }
      },
      "VolumeType": {
        "type": "object",
        "properties": {
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ID"
              },
              {
                "readOnly": true
              }
            ]
          },
          "source_id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ID"
              },
              {
                "readOnly": true
              }
            ]
          },
          "source_ref": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "example": "standard"
          },
          "description": {
            "type": "string",
            "example": "Magnetic"
          },
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      }
    }
  }
}
